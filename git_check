#!/bin/bash
#
# Checks the git status of the list of git repositories
#
#
cd /Users/woo/bin
nonWeb=/Users/woo/Development/
SERVER=jwooten37830.com
host=$(hostname)
home=${HOME}
declare -a gitrepos
while read line; do
#   echo $line
   gitrepos+=($line)
done < ~/bin/git_repositories.txt

#echo ${#gitrepos[@]}
for d in "${gitrepos[@]}"; do
    br=$(git rev-parse --abbrev-ref HEAD)
    reponame="`basename $d`"
    export reponame
    dir=$(dirname $d)
    if [ -d $d ]; then
        cd $d
    else
#        echo " $reponame --> Not a directory at $d"
        continue
    fi
    if [  -e $d/.git ]; then

    ok=true
    if [ ! -z "`git ls-files --other --exclude-standard 2> /dev/null`" ]; then
        echo " $reponame [$br] --> Untracked files present at $d"
        ok=false
    fi
    if [ ! -z "`git diff --cached --shortstat 2> /dev/null`" ]; then
        echo " $reponame [$br] --> Changes to be committed at $d"
        ok=false
    fi
    if [ ! -z "`git diff --shortstat 2> /dev/null`" ]; then
        echo " $reponame [$br] --> Changes to be staged/committed at $d"
        ok=false
    fi
    if [ ! -z "`git diff  2> /dev/null`" ]; then
      if [ ! $ok ]; then
        echo " $reponame [$br] --> Out of sync with origin/HEAD at $d"
        ok=false
      fi
    fi

    last_commit=`git log --oneline | head -n1 | grep -o "^\w*\b"`
    rev=$(git rev-parse --short HEAD)
    if [ "$last_commit" != "$rev"  ]; then
        echo " last_commit=$last_commit, rev=$rev"
        echo " $reponame [$br] --> Out of sync with remote at $d"
        ok=false
    fi

    if $ok; then
        rev=$(git rev-parse --short HEAD)
        echo " OK --> $reponame [$br] $rev"
    fi
        git branch -v |
        perl -wlne'
           print "$ENV{reponame} [$1] --> $3 $2"
              if /^..(\S+)\s+([a-f0-9]+)\s+(\[(?:ahead|behind)\s+\d+\])/
        ' |
        while IFS= read -r MOD; do
           printf ' %s\n' "$MOD"  # Replace with code that uses $MOD
        done
 else
    echo " $reponame --> Not a git repository at $d"
 fi
done
