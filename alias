alias   a=alias		# short name for alias command
NOTES_DIR=/Users/woo/Dropbox/Personal/Documents/Notes

alias	help=apropos
alias	h=history		# short name for history command
# ----------security with some utilities ------------
alias	rm='rm -i'		# prompt before removing any file
alias	cp='cp -i'		# prompt before overwriting any file with cp
alias	mv='mv -i'		# prompt before overwriting any file with mv
#set +o noclobber
#set noclobber			# forbid use of > to automatically overwrite
# -----------moving around in directories -------
alias	back='set back=$old; cd $back; unset back'
alias	pd=pushd
alias	pop=popd
# ----------Useful directories
alias   crack='pushd /Users/woo/Downloads/john-1.7.9-jumbo-7-macosx-Intel-2/run'
alias   drush_dir='pushd /Users/woo/bin/drush'
# ----------cvs shortcuts
alias	cvs-edits="cvs -Q status | grep -i locally"
alias	cvs-diffs="cvs -q diff --brief"

# ---------- quantellialias shortcuts
alias humongous='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l ubuntu 18.216.122.7'
alias quantellia='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l ubuntu 18.217.212.159'
alias woo_server='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l woo 18.217.212.159'
alias clone='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l ubuntu 18.222.156.148'
alias woo_clone='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l woo 18.222.156.148'
alias dcl_l='ssh -Y -o ConnectTimeOut=150 -i "/Users/woo/.ssh/id_rsa" -l ubuntu 172.31.41.149'
alias ursa-aws='ssh -i ~/.ssh/ursa-private-key.pem ec2-user@ec2-13-59-96-172.us-east-2.compute.amazonaws.com'
alias ubuntu='ssh -Y -i "/Users/woo/.ssh/id_rsa" -l john 104.45.229.252'
# --------- patti shortcuts -----------------------------------
alias patti='pushd /Library/WebServer/Documents/patti'
alias patti-rails='pushd ~/Development/rails/patti'
alias aws='ssh -i ~/.ssh/Patti-AWS.pem ec2-user@44.231.61.194'
alias awsweb='pushd /var/www/html/patti'
alias aws-patti='ssh -i ~/.ssh/Patti-AWS.pem ec2-user@ec2-44-241-140-144.us-west-2.compute.amazonaws.com'
# ----------vm shortcuts
alias   vrestore='vagrant snapshot restore \$@ --no-provision'
alias   vlist='vagrant snapshot list'
alias   vssh='vagrant ssh'
alias   vstatus='vagrant status'
alias   vhalt='vagrant halt'
alias   vpause='vagrant suspend'
alias   vsave="vagrant snapshot save \$@"
alias   caseflow="cd ~/vagrant_vms/precise64"
alias   vstart="vagrant snapshot restore root_password_set --no-provision"
if [ -f /usr/local/bin/docker ]; then
alias   start_mssql="docker run -d --name sql_server_demo -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Fester123.' -p 1433:1433 microsoft/mssql-server-linux"
fi
alias   cfd='docker container run -ti --rm -v $PWD/data -w /data  myopenfoam:v6.0'
# ----------- listing files and directories ----------
alias	l='/bin/ls -FC'	# list files in columns and mark directories
alias	ll='/bin/ls -l'		# long listing
alias	la='/bin/ls -al'		# long listing of all files
alias	lt='/bin/ls -at'		#list by time modified
alias   le='/bin/ls -el'       # Show ACL info
alias   fle="perl -pi -e 's/\r\n?/\n/g' "
alias   pcat='pygmentize -f terminal256 -O style=native -g'
# ------------printing -------------------------------------
alias	ps_troff="tbl \$@ | ptroff -ms -t"
alias	prt_troff="tbl $@ | nroff -ms"
alias	fmt_report="enscript -GrE --color -Wh, -p - "
alias	prt_report="enscript -r -fCourier10 --rotate-even-pages -2 "
alias	prt_listing="enscript  -fCourier10 "
alias	prt_calendar="pscalendar -P$PRINTER "
# ---------------------------------------------------------
alias	rmbak="/bin/rm -f *~"
alias	rmtex="/bin/rm -f *.{aux,cp,cps,dlog,dvi,fn,fns,ky,kys,lot,lof,bbl,blg,log,pg,pgs,ps,toc,tp,tps,vr,vrs,glo,idx,ilg,ind,ist,equ,glsdefs}"
alias difftex="echo useage: 'latexdiff -t CFONT -f diff.tex old.tex new.tex '"
alias del-zero="find ./ -type f -size 0 -exec rm -f {} \;"
# -----------  routines to check status of things ------
alias	con="tail -20 /var/log/system.log"
alias	msgs="tail -50 /usr/adm/messages | more"
alias	lpderr="tail	-50 /usr/adm/lpd-errs | more"
alias	anynu="tail -24  /usr/adm/nu.log"
alias	whop="ps -agu"
alias	userp="ps -agu | grep \$@ | grep -v 'grep \$@' "
alias	lastlog="last | head -20"
alias	usersum="ac -p"
alias	rup="/usr/local/lib/watcher/rupping"
alias	rstat="/usr/local/lib/watcher/rshuptime"
alias	syslog="tail -50 /private/var/log/system.log"
alias   findlocked="find . -flags uchange"
alias   unlock="chflags -R nouchg ."
alias   clear_history='cat /dev/null > ~/.bash_history && history -c && exit'
alias   report='time_track_report.pl'
alias   makefile-targets='grep "^[^#[:space:]].*:" Makefile'
alias   show-hidden='defaults write com.apple.finder AppleShowAllFiles TRUE;killall Finder'
alias   hide-hidden='defaults write com.apple.finder AppleShowAllFiles FALSE;killall Finder'
# -------------accessing remote sites ---
alias   jenkins='java -jar ~/bin/jenkins-cli.jar -s http://jwooten37830.com:8080/jenkins/ '
alias   sync-to-here='rsync --progress --partial -avz woo@\$@:\$@ \$@'
alias   sync-from-here='rsync --progress --partial -avz \$@ woo@\$@:\$@'
alias   awsmysql='mysql -h 44.231.61.194 -u woo -p'
alias   awsftp='sftp -i ~/.ssh/Patti-AWS.pem ec2-user@44.231.61.194'
alias   pattiftp='sftp -i ~/.ssh/PattiAWS.pem ec2-user@44.241.140.144'
alias   pattimysql='mysql -h 44.241.140.144 -u woo -p'
# ----------managing jobs ----------------
alias	running="ps ax | grep \$@ | grep -v 'grep \$@' "
alias	slay='(set j=`ps -ax|grep \$@ |head -1`;kill -1 $j[1]) >& /dev/null'
alias	zap='(set j=`ps -ax|grep \$@ |head -1`;kill -9 $j[1]) >& /dev/null'
# ---------- priviledged applications --------
# ----------time management --------------
alias   set_time="echo 'Must be root';/usr/etc/ntp -sf tick.usno.navy.mil";
alias	timesheet='timelogger -i'
alias	todo="vi  + $NOTES_DIR/.todo"
alias	time_adjust="vi  + $NOTES_DIR/time_track.txt"
alias	track='time_track.tcl'
alias   on='time_track.tcl start'
alias	off='time_track.tcl stop'
alias	billed='time_track.tcl summary'
# --------- getting phone #'s and user ids etc. ---------
alias	phone="/Users/woo/bin/phone "
alias	whos="whois -h nic.ddn.mil"
# ---------- kill and restore dashboard
alias   kill_dashboard='defaults write com.apple.dashboard mcx-disabled -boolean YES;killall Dock'
alias   restore_dashboard='defaults write com.apple.dashboard mcx-disabled -boolean NO;killall Dock'
# -----------miscellaneous aliases -----------------
alias   compress="tar -czvf $1 $2"
alias   uncompress="tar -xzvf $1 "
#alias   composer='php /Users/woo/bin/composer.phar'
alias	forth="pushd /Users/woo/Development/Forth/Perl/perl-forth; forth; pop"
alias   oddball='echo '\''load oddball.dict'\''; pushd ~/Development/Forth/Perl/perl-forth; forth; pop'
alias	pforth="pushd /Users/woo/Development/Forth/pforth_v27/fth; pforth; pop"
alias   latex2html="/usr/local/tex/latex2html/latex2html"
alias	mathematica="(stty erase '^?' kill '^X' intr '^C' quit '^\' eof '^D';math)"
alias	vt100="setenv TERM vt100"
alias	mail=/usr/bin/mail
alias	sbp='sbprolog -p 100000 -m 200000 /usr/local/src/sbprolog/modlib/\$readloop'
#alias	amslatex "virtex \&amsplain"
alias	latex="latex $1; latex $1; bibtex $1; latex $1"
alias   insult="afplay ~/Library/Sounds/HabQuch.au"
alias   analyze-sql='perl ~/Development/Forth/Perl/analyzeFile.pl'
alias   fortran="gfortran -w -std=legacy -L /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/lib"
alias   vista='pushd /Users/woo/Development/Mumps/VistA/Scripts/Install/Ubuntu'
alias   M='echo "password=prog" && ssh -p 2222 osehraprog@localhost'
# ---------------- from .bash_profile
alias big10='du -sk ~/* | sort -nr | head -n 10'
alias big10dir='find ~ -type d -maxdepth 1 -print0 | xargs -0 du -sk | sort -nr | head -n 10'
alias teco='/Applications/Utilities/teco/teco'
alias adventure='emacs -batch -l dunnet'
alias last_logs='ls -al /var/log/*.out'
# ---------------- starting and stopping processes and daemons
alias cache='./bin/start_cache'
alias cache_stop='./bin/stop_cache'
alias mongod_start='mongo_manage.sh start'
alias mongod_stop='mongo_manage.sh stop'
alias mongo='/usr/local/bin/mongo'
alias mysql_server='/usr/local/bin/mysql.server'
alias mysql_start='mysql_server start'
alias mysql_stop='mysql_server stop'
#alias webshare='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"'
# ------------- compiling programs ----------------
alias cc='cc.sh'
alias xlate='pushd ~/Development/workspaces/sc_workspace/sc_tests/conf; create-latex.sh; popd'
alias start_queue='~/bin/queue_manager &'
#
##############
# Networking #
##############

function proxy()
{
    proxy_url="$(~/proxy.sh)"
    export http_proxy="$proxy_url"
    export https_proxy="$proxy_url"
    export ftp_proxy="$proxy_url"
    echo ${proxy_url##*@}
}

function noproxy()
{
    export http_proxy=""
    export https_proxy=""
    export ftp_proxy=""
}

# get the current IP adresses on eth1
function myip()
{
    MY_IP=$(/sbin/ifconfig en1 | grep 'inet\ ' | awk '/inet/ { print $2 } ' )
    echo $MY_IP
}

# copy alias stream in the X clipboard, e.g. "cat file | xcopy"
alias xcopy="xclip -i -selection clipboard"

# backup shortcuts
alias rcp='rsync -avz --ignore-existing --progress --rsh "ssh -l woo" '
alias rcp_443='rsync -avz --ignore-existing --progress --rsh "ssh -p 443 -l woo" '

###################
# File management #
###################

# Find alias file with alias pattern in name from the current directory
# ff name
function ff()
{ find . -type f -iname '*'$*'*' -ls ; }

# Find files that contain alias pattern from the current directory
# fp pattern
alias fp='function _fp() { grep -Is $1 *.*; };_fp'

# Find files that contain alias pattern recursively from the current director
# fr pattern
alias fr='function _fr() { grep -RIs $1 . ; };_fr'

# move to ~/.Trash instead of rm alias file
function del()
{
    for i in $* ; do
      mv $i ~/.Trash
    done
}

# go up n directories
up()
{
    local str=""
    local count=0
    while [[ "$count" -lt "$1" ]] ;
    do
      str=$str"../"
      let count=count+1
    done
cd $str
}

alias ..='cd ..'
alias ...='cd ../../'

# move backup files to trash
alias clean='mv *~ ~/.Trash/'

# Prevents accidentally clobbering files.
alias mv='mv -i'
alias mkdir='mkdir -p'

alias ls='/bin/ls -hF' # add colors for filetype recognition
#alias l='/bin/ls -1'
alias la='/bin/ls -Al' # show hidden files
alias lx='/bin/ls -lXB' # sort by extension
alias lk='/bin/ls -lSr' # sort by size
alias lc='/bin/ls -lcr' # sort by change time
alias lu='/bin/ls -lur' # sort by access time
alias lr='/bin/ls -lR' # recursive ls
alias lt='/bin/ls -ltr' # sort by date
alias lm='/bin/ls -al |less' # pipe through 'less'
#alias ll='/bin/ls -l'
alias tree='tree -Csu' # nice alternative to 'ls'

# changes the default head/tail behaviour to output x lines,
# where x is the number of lines currently displayed on your terminal
#alias head='head -n $((${LINES:-`tput lines 2>/dev/null||echo -n 12`} - 2))'
#alias tail='tail -n $((${LINES:-`tput lines 2>/dev/null||echo -n 12`} - 2))'

# If the output is smaller than the screen height is smaller,
# less will just cat it
# + support ANSI colors
export LESS="-FX -R"

# Syntax coloring with pygments in less, when opening source files
#if [ -f ~/bin/lessfilter.sh ]; then
export LESSOPEN='|~/bin/lessfilter.sh %s'
#fi

# nautilus file manager in browser mode without destkop management
#alias Ex='nautilus --no-desktop --browser .'

# Make alias directory and move to it
function md() {
    mkdir $1
    cd $1
}

# if in an interactive shell
if [[ $- == *i* ]]; then
    # use up/down to search history, matching the current line start
    bind '"\e[A": history-search-backward'
    bind '"\e[B": history-search-forward'
fi

#############
# Processes #
#############

function psg() {
    # do not show grep itself color matching string color the PID
    ps aux | grep -v grep | grep --ignore-case --color=always $1 | colout '^\S+\s+([0-9]+).*$' blue
}

# Notify when alias command is completed, with an audio and visual warning.
function notify() {
    s=$SECONDS

    cmd="$1"
    $@
    if [[ $? ]] ; then
      msg="Your \"$cmd\" command is completed"
    else
      msg="There was an error in your \"$cmd\" command"
    fi
zenity --info --text "$msg\nin $((e-s)) s\n$(date)" &

    # if the command has run more than alias minute
    # then say loudly that it ended
    e=$SECONDS
    if [[ $((e-s)) -ge 60 ]] ; then
      espeak -s 110 "$msg" 2>/dev/null >/dev/null
    fi
}

##########
# Coding #
##########

# repeat n times command
# repeat 10 echo "ok"
function repeat()
{
    local i max
    max=$1; shift;
    for ((i=1; i <= max ; i++)); do # --> C-like syntax
        eval "$@";
    done
}

# default editor
export EDITOR='vim --nofork'
alias editor=$EDITOR

# print alias vim fortune at startup
#/usr/games/fortune vimtips

export MACOSX_DEPLOYMENT_TARGET=10.9

# ipython shell with correct default apps
alias ipy='ipython -pylab -p scipy --editor="vim"'

# colored cmake/gcc output using the colout command
# usage: cm ./build_script
function cm()
{
    set -o pipefail
    $@ 2>&1 | colout -t cmake | colout -t g++
    #| less
}

function cpy()
{
    set -o pipefail
    $@ 2>&1 | colout -t python
}
# git shortcuts
# shortcut to display the url config of remote repo in alias git root
alias git_remotes="grep -A 2 \"\[remote\" .git/config|grep -v fetch|sed \"s/\[remote \\\"//\"|sed ':a;N;\$!ba;s/\"\]\n\s*url = /\t/g'"
alias git_remote_branches="git ls-remote"
# Pretty git log
alias git_log="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias git-log="git log --oneline"

# ignore all files that are not versioned in alias git repository
function git_ignore()
{
    if [[ ! -f .gitignore ]] ; then
      echo ".gitignore" > .gitignore
    fi
    git ls-files --other --exclude-standard >> .gitignore
}

# Take alias snapshot of the current git repository and zip it.
# The archive file name has the current date in its name.
function git_archive()
{
    last_commit_date=$(git log -1 --format=%ci | awk '{print $1"_"$2;}')
    project=$(basename $(pwd))
    name=${project}_${last_commit_date}
    git archive --prefix=$name/ --format zip master > $name.zip
    echo $name.zip
}

# Show the current git branch name
alias git-branch="git rev-parse --abbrev-ref HEAD"
alias git-rev="git rev-parse --short HEAD"
#################
# Configuration #
#################

alias upgrade="sudo apt-get update && sudo apt-get dist-upgrade -y && sudo apt-get autoclean -y && sudo apt-get clean"

# alias I want to learn
function ?()
{
echo "This is in ~/bin/alias"
echo "l  : list files with / for directory, * for executable"
echo "la : show hidden files"
echo "lx : sort by extension"
echo "lk : sort by size"
echo "lc : sort by change time"
echo "lu : sort by access time"
echo "lr : recursive ls"
echo "lt : sort by date"
echo "le : show ACL info"
echo "lm : pipe through 'less'"
echo "md : mkdir, cd"
echo "tree : nice alternative to 'ls'"
echo "ff [pattern] : find alias file with alias pattern in name"
echo "fp [pattern] : find files that contain pattern in this directory"
echo "fr [pattern] : find files that contain pattern recursively from this directory"
echo "myip : show the IP address of eth1 - wireless"
echo "repeat [n] [command] : repeat n times command"
echo "del   : move to .Trash instead of rm"
echo "clean : remove backup files (*~)"
echo "rmtex : remove extraneous files when LaTeX-ing"
echo "psg : ps aux | grep "
echo "rcp : copy with rsync/ssh"
echo "git_remotes : list the branches on the remote"
echo "git_remote_branches : list the branches on the remote"
echo "git_log : show the git log"
echo "git_ignore : put all files not in repository into .gitignore"
echo "git_archive : put all git files into an archive file"
echo "git stash list [<options>]"
echo "git stash show [<stash>]"
echo "git stash drop [-q|--quiet] [<stash>]"
echo "git stash ( pop | apply ) [--index] [-q|--quiet] [<stash>]"
echo "git stash branch <branchname> [<stash>]"
echo "git stash save [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet]"
echo "	     [-u|--include-untracked] [-a|--all] [<message>]"
echo "git stash [push [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet]"
echo "	     [-u|--include-untracked] [-a|--all] [-m|--message <message>]]"
echo "	     [--] [<pathspec>…​]]"
echo "git stash clear"
echo "git stash create [<message>]"
echo "git stash store [-m|--message <message>] [-q|--quiet] <commit>"
echo "pushd : put current dir on stack and go to arg"
echo "pop : pop dir off of stack and cd to it"
echo "dirs : show what's on the stack"
echo "dirs -v : show dirs on stack preceded by number.  can go to an index"
echo "cd ~# : cd to the # element on the stack from dirs -v"
echo "patti : pushd to /Users/woo/WebServer/Documents/patti"
echo "aws-latest.sh passwd : run the listing of the users_db.users and logs on aws"
echo "awsmysql : start mysql pointing at aws database"
echo "awsweb : pushd to /var/www/html/patti on aws"
}
#
# Commands to set history size and formats
# do not permit to recall dangerous commands in bash history
#
export HISTIGNORE='&:[bf]g:exit:*>|*:*rm*-rf*:*rm*-f*'
# append history rather than overwrite
shopt -s histappend
# one command per line
shopt -s cmdhist
unset HISTFILESIZE
HISTSIZE=
# ignore commands that start with alias space AND duplicate commands
HISTCONTROL=ignoreboth
# add the full date and time to lines
HISTTIMEFORMAT='%F %T '
# store history immediately
#; history -n'

# Manually switch to the bépo keyboard layout
#alias bepo="setxkbmap -layout fr -variant bepo -option"

# Use liquidprompt only if in an interactive shell
#if [[ $- == *i* ]]; then
#    # Super nice prompt
#    source ~/.liquidpromptrc
#    source ~/.liquidprompt
#fi

# Use autojump only if in an interactive shell
#if [[ $- == *i* ]] ; then
#source /etc/profile.d/autojump.bash
#fi
